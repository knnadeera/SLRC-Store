{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Checkout.js"],"names":["module","exports","form","control","action","checkout","invalid","names","address","phn_control","isEmpty","value","trim","length","Checkout","props","_useState","useState","_useState2","Object","H_New_folder_SLRC_React_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","phoneValue","setPhoneValue","_useState3","firstName","lastName","city","postalCode","phoneNumber","_useState4","formInputValidity","setFormInputValidity","firstNameInputRef","useRef","lastNameInputRef","addressLine1InputRef","addressLine2InputRef","cityInputRef","postalCodeInputRef","phoneNumberInputRef","firstNameInvalidClasses","concat","classes","lastNameInvalidClasses","AddressInvalidClasses","cityInvalidClasses","postslCodeInvalidClasses","phoneNumberInvalidClasses","formInputs","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_1__","className","htmlFor","type","id","ref","placeholder","react_phone_number_input__WEBPACK_IMPORTED_MODULE_4__","onChange","onSubmit","event","preventDefault","enteredFirstName","current","enteredLastName","enteredAddress","enteredCity","enteredPostalCode","enteredPhoneNumber","enteredFirstNameIsValid","enteredLastNameIsValid","enteredAddressIsValid","enteredCityIsValid","enteredPostalCodeIsValid","enteredPhoneNumberIsValid","isPhoneNumber","onConfirm","close","onClick","onClose"],"mappings":"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","file":"static/js/8.df243572.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__1CTmt\",\"control\":\"Checkout_control__2OZsf\",\"action\":\"Checkout_action__2Kg_-\",\"checkout\":\"Checkout_checkout__-b943\",\"invalid\":\"Checkout_invalid__37rcH\",\"names\":\"Checkout_names__2vAy0\",\"address\":\"Checkout_address__17WpV\",\"phn_control\":\"Checkout_phn_control__3KOeP\"};","import React, { useState, useRef, Fragment } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\n\r\nconst isEmpty = (value) => value.trim().length === 0;\r\nconst isPostalCode = (value) => value.trim().length === 5;\r\nconst isPhoneNumber = (value) => value.trim().length > 10;\r\n\r\nconst Checkout = (props) => {\r\n  const [phoneValue, setPhoneValue] = useState();\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    firstName: true,\r\n    lastName: true,\r\n    address: true,\r\n    city: true,\r\n    postalCode: true,\r\n    phoneNumber: true,\r\n  });\r\n\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const addressLine1InputRef = useRef();\r\n  const addressLine2InputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const phoneNumberInputRef = useRef();\r\n\r\n  const ChechoutHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredFirstName = firstNameInputRef.current.value;\r\n    const enteredLastName = lastNameInputRef.current.value;\r\n    const enteredAddress =\r\n      addressLine1InputRef.current.value || addressLine2InputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredPhoneNumber = phoneNumberInputRef.current.value;\r\n\r\n    const enteredFirstNameIsValid = !isEmpty(enteredFirstName);\r\n    const enteredLastNameIsValid = !isEmpty(enteredLastName);\r\n    const enteredAddressIsValid = !isEmpty(enteredAddress);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isPostalCode(enteredPostalCode);\r\n    const enteredPhoneNumberIsValid = isPhoneNumber(enteredPhoneNumber);\r\n\r\n    setFormInputValidity({\r\n      firstName: enteredFirstNameIsValid,\r\n      lastName: enteredLastNameIsValid,\r\n      address: enteredAddressIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n      phoneNumber: enteredPhoneNumberIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredFirstNameIsValid &&\r\n      enteredLastNameIsValid &&\r\n      enteredAddressIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid &&\r\n      enteredPhoneNumberIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      firstName: enteredFirstName,\r\n      lastName: enteredLastName,\r\n      address: enteredAddress,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n      phoneNumber: enteredPhoneNumber,\r\n    });\r\n    // dispatch(cartActions.checkoutCart());\r\n  };\r\n\r\n  const firstNameInvalidClasses = `${classes.control} ${\r\n    formInputValidity.firstName ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const lastNameInvalidClasses = `${classes.control} ${\r\n    formInputValidity.lastName ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const AddressInvalidClasses = `${classes.control} ${\r\n    formInputValidity.address ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const cityInvalidClasses = `${classes.control} ${\r\n    formInputValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const postslCodeInvalidClasses = `${classes.control} ${\r\n    formInputValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const phoneNumberInvalidClasses = `${classes.control} ${\r\n    formInputValidity.phoneNumber ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  const formInputs = (\r\n    <Fragment>\r\n      <section className={classes.names}>\r\n        <div className={firstNameInvalidClasses}>\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input type=\"text\" id=\"first_name\" ref={firstNameInputRef} />\r\n          {!formInputValidity.firstName && <p>Please Enter the First Name</p>}\r\n        </div>\r\n        <div className={lastNameInvalidClasses}>\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input type=\"text\" id=\"last_name\" ref={lastNameInputRef} />\r\n          {!formInputValidity.lastName && <p>Please Enter the Last Name</p>}\r\n        </div>\r\n      </section>\r\n      <section className={classes.address}>\r\n        <div className={AddressInvalidClasses}>\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"street_address1\"\r\n            placeholder=\"House Number\"\r\n            ref={addressLine1InputRef}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"street_address2\"\r\n            placeholder=\"Street Name\"\r\n            ref={addressLine2InputRef}\r\n          />\r\n          {!formInputValidity.address && <p>Please Enter the Address</p>}\r\n        </div>\r\n      </section>\r\n      <section className={classes.names}>\r\n        <div className={cityInvalidClasses}>\r\n          <label htmlFor=\"city\">Town/City</label>\r\n          <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n          {!formInputValidity.city && <p>Please Enter the City</p>}\r\n        </div>\r\n        <div className={postslCodeInvalidClasses}>\r\n          <label htmlFor=\"postal_code\">Postal Code/Zip</label>\r\n          <input type=\"number\" id=\"postal_code\" ref={postalCodeInputRef} />\r\n          {!formInputValidity.postalCode && <p>Please Enter the Postal Code</p>}\r\n        </div>\r\n      </section>\r\n      <div className={phoneNumberInvalidClasses}>\r\n        <label htmlFor=\"phone_number\">Phone Number</label>\r\n        <PhoneInput\r\n          className={classes.phn_control}\r\n          type=\"tel\"\r\n          id=\"phone_number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={phoneValue}\r\n          onChange={setPhoneValue}\r\n          ref={phoneNumberInputRef}\r\n        />{\" \"}\r\n        {!formInputValidity.phoneNumber && <p>Please Enter the Phone Number</p>}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={ChechoutHandler}>\r\n      {formInputs}\r\n      <div className={classes.action}>\r\n        <button type=\"button\" className={classes.close} onClick={props.onClose}>\r\n          Close\r\n        </button>\r\n        <button className={classes.checkout}>Checkout</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"sourceRoot":""}