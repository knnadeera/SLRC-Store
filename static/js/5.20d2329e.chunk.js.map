{"version":3,"sources":["components/Layout/User/UserLogin.module.css","components/Layout/User/UserSignUpForm.module.css","components/Layout/User/User.module.css","components/Layout/User/NewPassword.module.css","components/Layout/User/UserProfile.module.css","components/Layout/User/UserLogin.js","components/Layout/User/UserSignUpForm.js","components/Layout/User/NewPassword.js","components/Layout/User/UserProfile.js","components/Layout/User/User.js","components/UI/Card.js","components/UI/Card.module.css"],"names":["module","exports","login","input","actions","button","sgnbutton","user_form","citydata","city","postal","user","form","user_profile","menu","body","UserLogin","props","emailInputRef","useRef","passwordInputRef","authCtx","useContext","AuthContext","react_default","a","createElement","className","classes","htmlFor","type","id","ref","onClick","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","JSON","stringify","email","password","returnSecureToken","headers","Content-Type","then","res","ok","json","data","errorMessage","error","message","Error","idToken","localId","console","log","catch","err","alert","onSignUp","isEmpty","trim","length","UserSignUpForm","_useState","useState","userName","mobileNum","address","postalCode","country","_useState2","Object","slicedToArray","setIsFormValid","userNameInputRef","mobileNumberInputRef","addressInputRef","cityInputRef","postalCodeInputRef","countryInputRef","submitHandler","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","enteredUserName","enteredMobileNumber","enteredAddress","enteredCity","enteredPostalCode","enteredCountry","userNameIsVlid","emailIsVlid","passwordIsVlid","mobileNumIsVlid","addressIsVlid","cityIsVlid","postalCodeIsVlid","countryIsVlid","wrap","_context","prev","next","abrupt","concat","useName","stop","_x","apply","this","arguments","pattern","name","onLogin","NewPassword","newPasswordInputRef","UserProfile","changePassword","setChangePassword","react","Card","react_router_dom","to","User_NewPassword","User","isLogin","setIsLogin","isLoggedIn","switchAuthModeHandler","prevState","User_UserProfile","User_UserLogin","User_UserSignUpForm","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Card_module_css__WEBPACK_IMPORTED_MODULE_1__","_Card_module_css__WEBPACK_IMPORTED_MODULE_1___default","card","children"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,yBAAAC,MAAA,yBAAAC,QAAA,2BAAAC,OAAA,0BAAAC,UAAA,mDCAlBN,EAAAC,QAAA,CAAkBM,UAAA,kCAAAJ,MAAA,8BAAAK,SAAA,iCAAAC,KAAA,6BAAAC,OAAA,+BAAAN,QAAA,gCAAAC,OAAA,qDCAlBL,EAAAC,QAAA,CAAkBU,KAAA,yCCAlBX,EAAAC,QAAA,CAAkBW,KAAA,gDCAlBZ,EAAAC,QAAA,CAAkBY,aAAA,kCAAAC,KAAA,0BAAAC,KAAA,yHCiFHC,EA9EG,SAACC,GACjB,IAAMC,EAAgBC,mBAChBC,EAAmBD,mBAEnBE,EAAUC,qBAAWC,KA2C3B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ1B,OACtBsB,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQzB,OACvBqB,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,kBAAf,aACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOC,GAAG,iBAAiBC,IAAKd,IAC5CM,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAf,aACAL,EAAAC,EAAAC,cAAA,SACEI,KAAK,WACLC,GAAG,iBACHC,IAAKZ,KAGTI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxB,SACtBoB,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAQvB,OACnByB,KAAK,SACLG,QA1Dc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAelB,EAAcmB,QAAQC,MACrCC,EAAkBnB,EAAiBiB,QAAQC,MAEjDE,MACE,oHACA,CACEC,OAAQ,OACR1B,KAAM2B,KAAKC,UAAU,CACnBC,MAAOR,EACPS,SAAUN,EACVO,mBAAmB,IAErBC,QAAS,CAAEC,eAAgB,sBAG5BC,KAAK,SAACC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,KAAK,SAACI,GACtB,IAAIC,EAAe,4BAKnB,MAHID,GAAQA,EAAKE,OAASF,EAAKE,MAAMC,UACnCF,EAAeD,EAAKE,MAAMC,SAEtB,IAAIC,MAAMH,OAIrBL,KAAK,SAACI,GACLhC,EAAQnB,MAAMmD,EAAKK,QAASL,EAAKM,SACjCC,QAAQC,IAAIR,EAAKM,WAElBG,MAAM,SAACC,GACNC,MAAMD,EAAIP,aAkBV,UAQFhC,EAAAC,EAAAC,cAAA,KAAGO,QAAShB,EAAMgD,UAAlB,iBAEEzC,EAAAC,EAAAC,cAAA,WAFF,q0MCtEN,IAAMwC,EAAU,SAAC5B,GAAD,OAAmC,IAAxBA,EAAM6B,OAAOC,QA8KzBC,EA3KQ,SAACpD,GAAU,IAAAqD,EACMC,mBAAS,CAC7CC,UAAU,EACV5B,OAAO,EACPC,UAAU,EACV4B,WAAW,EACXC,SAAS,EACTjE,MAAM,EACNkE,YAAY,EACZC,SAAS,IATqBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACZU,GADYH,EAAA,GAAAA,EAAA,IAY1BI,EAAmB9D,mBACnBD,EAAgBC,mBAChBC,EAAmBD,mBACnB+D,EAAuB/D,mBACvBgE,EAAkBhE,mBAClBiE,EAAejE,mBACfkE,EAAqBlE,mBACrBmE,EAAkBnE,mBAElBoE,EAAa,eAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,IAAAC,KAAG,SAAAC,EAAO1D,GAAP,IAAA2D,EAAAzD,EAAAG,EAAAuD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhB,IAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACpB5E,EAAMC,iBAEA0D,EAAkBZ,EAAiB5C,QAAQC,MAC3CF,EAAelB,EAAcmB,QAAQC,MACrCC,EAAkBnB,EAAiBiB,QAAQC,MAC3CwD,EAAsBZ,EAAqB7C,QAAQC,MACnDyD,EAAiBZ,EAAgB9C,QAAQC,MACzC0D,EAAcZ,EAAa/C,QAAQC,MACnC2D,EAAoBZ,EAAmBhD,QAAQC,MAC/C4D,EAAiBZ,EAAgBjD,QAAQC,MAEzC6D,GAAkBjC,EAAQ2B,GAC1BO,GAAelC,EAAQ9B,GACvBiE,GAAkBnC,EAAQ3B,GAC1B+D,GAAmBpC,EAAQ4B,GAC3BS,GAAiBrC,EAAQ6B,GACzBS,GAActC,EAAQ8B,GACtBS,EAzC8C,IAyCdR,EAzCJ9B,OAAOC,OA0CnCsC,GAAiBxC,EAAQgC,GAE/BlB,EAAe,CACbR,SAAU2B,EACVvD,MAAOwD,EACPvD,SAAUwD,EACV5B,UAAW6B,EACX5B,QAAS6B,EACT9F,KAAM+F,EACN7B,WAAY8B,EACZ7B,QAAS8B,IAITP,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EAxCkB,CAAAE,EAAAE,KAAA,gBAAAF,EAAAG,OAAA,kBA8CpBvE,MACE,wGACA,CACEC,OAAQ,OACR1B,KAAM2B,KAAKC,UAAU,CACnBC,MAAOR,EACPS,SAAUN,EACVO,mBAAmB,IAErBC,QAAS,CAAEC,eAAgB,sBAG5BC,KAAK,SAACC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,KAAK,SAACI,GACtB,IAAIC,EAAe,4BAKnB,MAHID,GAAQA,EAAKE,OAASF,EAAKE,MAAMC,UACnCF,EAAeD,EAAKE,MAAMC,SAEtB,IAAIC,MAAMH,OAIrBQ,MAAM,SAACC,GACNC,MAAMD,EAAIP,WAEXP,KAAK,SAACI,GACLb,MAAK,kFAAAwE,OAC+E3D,EAAKM,QADpF,SAEH,CACElB,OAAQ,OACR1B,KAAM2B,KAAKC,UAAU,CACnBsE,QAASpB,EACTjD,MAAOR,EACPqC,UAAWqB,EACXpB,QAASqB,EACTtF,KAAMuF,EACNrB,WAAYsB,EACZrB,QAASsB,MAIftC,QAAQC,IAAIR,KA3FI,yBAAAuD,EAAAM,SAAAtB,MAAH,gBAAAuB,GAAA,OAAA3B,EAAA4B,MAAAC,KAAAC,YAAA,GA+FnB,OACE9F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQrB,WACtBiB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQzB,OACvBqB,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAf,aACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOC,GAAG,WAAWC,IAAKiD,IACtCzD,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAf,WACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,QAAQE,IAAKd,IACzBM,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAf,cACAL,EAAAC,EAAAC,cAAA,SACEI,KAAK,MACLyF,QAAQ,YACRvF,IAAKkD,IAEP1D,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAf,aACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWE,IAAKZ,IAC5BI,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,WAAf,WACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOE,IAAKmD,IACxB3D,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQpB,UAC1BgB,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQnB,MAC1Be,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,QAAf,QACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOE,IAAKoD,KAE1B5D,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQlB,QAC1Bc,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,UAAf,eACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASE,IAAKqD,MAG9B7D,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,WAAf,WACAL,EAAAC,EAAAC,cAAA,UAAQK,GAAG,UAAUyF,KAAK,UAAUxF,IAAKsD,GACvC9D,EAAAC,EAAAC,cAAA,UAAQY,MAAM,aAAd,aACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,aAAd,aACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,SAAd,SACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,eAAd,eACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,wBAAd,wBACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,kBAAd,kBACAd,EAAAC,EAAAC,cAAA,UAAQY,MAAM,iBAAd,mBAGJd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxB,SACtBoB,EAAAC,EAAAC,cAAA,UACEC,UAAWC,IAAQvB,OACnByB,KAAK,SACLG,QAASsD,GAHX,YAQF/D,EAAAC,EAAAC,cAAA,KAAGO,QAAShB,EAAMwG,SAAlB,sFC3JSC,EAZK,SAACzG,GACnB,IAAM0G,EAAsBxG,mBAE5B,OACEK,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQhB,MACvBY,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,gBAAf,gBACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,WAAWC,GAAG,eAAeC,IAAK2F,IAC9CnG,EAAAC,EAAAC,cAAA,qDCqBSkG,EAzBK,SAAC3G,GAAU,IAAAqD,EACeC,oBAAS,GADxBM,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACtBuD,EADsBhD,EAAA,GACNiD,EADMjD,EAAA,GAM7B,OACErD,EAAAC,EAAAC,cAACqG,EAAA,SAAD,KACEvG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQf,cACtBW,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,MACtBU,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAASC,GAAG,qBAAZ,gBACA1G,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGO,QAZiB,WAC5B6F,GAAkB,KAWV,mBACAtG,EAAAC,EAAAC,cAAA,0BAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MAAO8G,GAAkBrG,EAAAC,EAAAC,cAACyG,EAAD,UCK1CC,UAvBF,SAACnH,GAAU,IAAAqD,EACQC,oBAAS,GADjBM,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACf+D,EADexD,EAAA,GACNyD,EADMzD,EAAA,GAIhB0D,EAFUjH,qBAAWC,KAEAgH,WAErBC,EAAwB,WAC5BF,EAAW,SAACG,GAAD,OAAgBA,KAG7B,OACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQjB,MACrB4H,GAAc/G,EAAAC,EAAAC,cAACgH,EAAD,OACbH,GACA/G,EAAAC,EAAAC,cAAA,WACG2G,GAAW7G,EAAAC,EAAAC,cAACiH,EAAD,CAAW1E,SAAUuE,KAC/BH,GAAW7G,EAAAC,EAAAC,cAACkH,EAAD,CAAgBnB,QAASe,wCCvBhD,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAOejB,IAJF,SAAC/G,GACZ,OAAO8H,EAAAtH,EAAAC,cAAA,OAAKC,UAAWC,IAAQuH,MAAOlI,EAAMmI,+BCH9CpJ,EAAAC,QAAA,CAAkBkJ,KAAA","file":"static/js/5.20d2329e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"UserLogin_login__3_CR8\",\"input\":\"UserLogin_input__1AxFn\",\"actions\":\"UserLogin_actions__89bbv\",\"button\":\"UserLogin_button__23ImN\",\"sgnbutton\":\"UserLogin_sgnbutton__2e_F6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_form\":\"UserSignUpForm_user_form__2W16k\",\"input\":\"UserSignUpForm_input__27LMc\",\"citydata\":\"UserSignUpForm_citydata__2VZ38\",\"city\":\"UserSignUpForm_city__1Ubjm\",\"postal\":\"UserSignUpForm_postal__3LfNl\",\"actions\":\"UserSignUpForm_actions__2Dmwj\",\"button\":\"UserSignUpForm_button__w3kwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__Gq78E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPassword_form__3XyKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_profile\":\"UserProfile_user_profile__3JqhC\",\"menu\":\"UserProfile_menu__1zKjP\",\"body\":\"UserProfile_body__1YaI4\"};","import React, { useContext, useRef } from \"react\";\r\nimport AuthContext from \"../../../Store/auth-context\";\r\nimport classes from \"./UserLogin.module.css\";\r\n\r\nconst UserLogin = (props) => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAaISA5Vy4eneIF0K23yVeOnn9_m95dMfQ\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed...!\";\r\n\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .then((data) => {\r\n        authCtx.login(data.idToken, data.localId);\r\n        console.log(data.localId);\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.login}>\r\n      <h1>Login</h1>\r\n      <form className={classes.input}>\r\n        <label htmlFor=\"login_username\">UserName:</label>\r\n        <input type=\"text\" id=\"login_username\" ref={emailInputRef}/>\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"login_password\"\r\n          ref={passwordInputRef}\r\n        />\r\n      </form>\r\n      <div className={classes.actions}>\r\n        <button\r\n          className={classes.button}\r\n          type=\"submit\"\r\n          onClick={submitHandler}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n      <p onClick={props.onSignUp}>\r\n        New Customers.\r\n        <br />\r\n        Create an Account...!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","import React, { useRef, useState } from \"react\";\r\nimport classes from \"./UserSignUpForm.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim().length === 0;\r\nconst isPostalCode = (value) => value.trim().length === 5;\r\n\r\nconst UserSignUpForm = (props) => {\r\n  const [isFormValid, setIsFormValid] = useState({\r\n    userName: true,\r\n    email: true,\r\n    password: true,\r\n    mobileNum: true,\r\n    address: true,\r\n    city: true,\r\n    postalCode: true,\r\n    country: true,\r\n  });\r\n\r\n  const userNameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const countryInputRef = useRef();\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredUserName = userNameInputRef.current.value;\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCountry = countryInputRef.current.value;\r\n\r\n    const userNameIsVlid = !isEmpty(enteredUserName);\r\n    const emailIsVlid = !isEmpty(enteredEmail);\r\n    const passwordIsVlid = !isEmpty(enteredPassword);\r\n    const mobileNumIsVlid = !isEmpty(enteredMobileNumber);\r\n    const addressIsVlid = !isEmpty(enteredAddress);\r\n    const cityIsVlid = !isEmpty(enteredCity);\r\n    const postalCodeIsVlid = isPostalCode(enteredPostalCode);\r\n    const countryIsVlid = !isEmpty(enteredCountry);\r\n\r\n    setIsFormValid({\r\n      userName: userNameIsVlid,\r\n      email: emailIsVlid,\r\n      password: passwordIsVlid,\r\n      mobileNum: mobileNumIsVlid,\r\n      address: addressIsVlid,\r\n      city: cityIsVlid,\r\n      postalCode: postalCodeIsVlid,\r\n      country: countryIsVlid,\r\n    });\r\n\r\n    const formIsValid =\r\n      userNameIsVlid &&\r\n      emailIsVlid &&\r\n      passwordIsVlid &&\r\n      mobileNumIsVlid &&\r\n      addressIsVlid &&\r\n      cityIsVlid &&\r\n      postalCodeIsVlid &&\r\n      countryIsVlid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    fetch(\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAaISA5Vy4eneIF0K23yVeOnn9_m95dMfQ\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed...!\";\r\n\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      })\r\n      .then((data) => {\r\n        fetch(\r\n          `https://sl-rc-store-default-rtdb.asia-southeast1.firebasedatabase.app/userData/${data.localId}.json`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              useName: enteredUserName,\r\n              email: enteredEmail,\r\n              mobileNum: enteredMobileNumber,\r\n              address: enteredAddress,\r\n              city: enteredCity,\r\n              postalCode: enteredPostalCode,\r\n              country: enteredCountry,\r\n            }),\r\n          }\r\n        );\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.user_form}>\r\n      <h1>Register</h1>\r\n      <form className={classes.input}>\r\n        <label htmlFor=\"username\">UserName:</label>\r\n        <input type=\"text\" id=\"username\" ref={userNameInputRef}/>\r\n        <label htmlFor=\"email\">E-mail:</label>\r\n        <input type=\"email\" ref={emailInputRef}/>\r\n        <label htmlFor=\"tel\">Mobile No:</label>\r\n        <input\r\n          type=\"tel\"\r\n          pattern=\"[0-9]{10}\"\r\n          ref={mobileNumberInputRef}\r\n        />\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input type=\"password\" ref={passwordInputRef}/>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" ref={addressInputRef}/>\r\n        <section className={classes.citydata}>\r\n          <section className={classes.city}>\r\n            <label htmlFor=\"city\">City</label>\r\n            <input type=\"text\" ref={cityInputRef}/>\r\n          </section>\r\n          <section className={classes.postal}>\r\n            <label htmlFor=\"postal\">Postal Code</label>\r\n            <input type=\"number\" ref={postalCodeInputRef}/>\r\n          </section>\r\n        </section>\r\n        <label htmlFor=\"country\">Country</label>\r\n        <select id=\"country\" name=\"country\" ref={countryInputRef}>\r\n          <option value=\"Sri Lanka\">Sri Lanka</option>\r\n          <option value=\"Australia\">Australia</option>\r\n          <option value=\"Italy\">Italy</option>\r\n          <option value=\"South Korea\">South Korea</option>\r\n          <option value=\"United Arab Emirates\">United Arab Emirates</option>\r\n          <option value=\"United Kingdom\">United Kingdom</option>\r\n          <option value=\"United States\">United States</option>\r\n        </select>\r\n      </form>\r\n      <div className={classes.actions}>\r\n        <button\r\n          className={classes.button}\r\n          type=\"submit\"\r\n          onClick={submitHandler}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <p onClick={props.onLogin}>\r\n        Login with existing account.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignUpForm;\r\n","import React, { useRef } from \"react\";\r\nimport classes from \"./NewPassword.module.css\";\r\n\r\nconst NewPassword = (props) => {\r\n  const newPasswordInputRef = useRef();\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <label htmlFor=\"new-password\">New Password</label>\r\n      <input type=\"password\" id=\"new-password\" ref={newPasswordInputRef} />\r\n      <button>Change Password</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPassword;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"../../UI/Card\";\r\nimport NewPassword from \"./NewPassword\";\r\nimport classes from \"./UserProfile.module.css\";\r\n\r\nconst UserProfile = (props) => {\r\n  const [changePassword, setChangePassword] = useState(false);\r\n\r\n  const changePasswordHandler = () => {\r\n    setChangePassword(true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.user_profile}>\r\n        <Card>\r\n          <div className={classes.menu}>\r\n            <NavLink to=\"/admin/addnewpart\">Add New Part</NavLink>\r\n            <p>My Orders</p>\r\n            <p>Account Details</p>\r\n            <p>Addresses</p>\r\n            <p onClick={changePasswordHandler}>Change Password</p>\r\n            <button>Logout</button>\r\n          </div>\r\n        </Card>\r\n        <div className={classes.body}>{changePassword && <NewPassword />}</div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useContext, useState } from \"react\";\r\nimport UserLogin from \"./UserLogin\";\r\nimport UserSignUpForm from \"./UserSignUpForm\";\r\nimport classes from \"./User.module.css\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport AuthContext from \"../../../Store/auth-context\";\r\n\r\nconst User = (props) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.user}>\r\n      {isLoggedIn && <UserProfile />}\r\n      {!isLoggedIn && (\r\n        <div>\r\n          {isLogin && <UserLogin onSignUp={switchAuthModeHandler} />}\r\n          {!isLogin && <UserSignUpForm onLogin={switchAuthModeHandler} />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__28K3L\"};"],"sourceRoot":""}