{"version":3,"sources":["pages/Reviews/Reviews.module.css","pages/Reviews/ReviewItem.module.css","pages/Reviews/ReviewsList.module.css","pages/Reviews/NewReviewForm.module.css","pages/Reviews/ReviewItem.js","pages/Reviews/ReviewsList.js","pages/Reviews/NewReviewForm.js","pages/Reviews/Reviews.js"],"names":["module","exports","reviews","reviews_list","item","form","loading","control","actions","ReviewItem","props","react_default","a","createElement","className","classes","text","ReviewsList","map","review","Reviews_ReviewItem","key","id","NewReviewForm","reviewTextRef","useRef","_useHttp","useHttp","addReview","sendRequest","status","error","onAddedReview","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","reviewData","partId","onSubmit","htmlFor","rows","ref","Reviews","_useState","useState","_useState2","Object","slicedToArray","isAddingReview","setIsAddingReview","params","useParams","getAllReviews","loadedReviews","data","addedReviewHandler","useCallback","length","Reviews_ReviewsList","onClick","Reviews_NewReviewForm"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,oDCAlBH,EAAAC,QAAA,CAAkBG,KAAA,+CCAlBJ,EAAAC,QAAA,CAAkBC,QAAA,mDCAlBF,EAAAC,QAAA,CAAkBI,KAAA,4BAAAC,QAAA,+BAAAC,QAAA,+BAAAC,QAAA,gKCUHC,EARI,SAACC,GAClB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQX,MACrBO,EAAAC,EAAAC,cAAA,SAAIH,EAAMM,0BCQDC,EAVK,SAACP,GACnB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAQb,SACpBQ,EAAMR,QAAQgB,IAAI,SAACC,GAAD,OACjBR,EAAAC,EAAAC,cAACO,EAAD,CAAYC,IAAKF,EAAOG,GAAIN,KAAMG,EAAOH,6BCoClCO,EArCO,SAACb,GACrB,IAAMc,EAAgBC,mBADSC,EAGQC,YAAQC,KAAvCC,EAHuBH,EAGvBG,YAAaC,EAHUJ,EAGVI,OAAQC,EAHEL,EAGFK,MAErBC,EAAkBtB,EAAlBsB,cAERC,oBAAU,WACO,cAAXH,GAA2BC,GAC7BC,KAED,CAACF,EAAQC,EAAOC,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcb,EAAcc,QAAQC,MAI1CV,EAAY,CAAEW,WAAY,CAAExB,KAAMqB,GAAeI,OAAQ/B,EAAM+B,UAGjE,OACE9B,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQV,KAAMqC,SAAUR,GAEvCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,QAASmC,SAAUR,GACzCvB,EAAAC,EAAAC,cAAA,SAAO8B,QAAQ,UAAf,eACAhC,EAAAC,EAAAC,cAAA,YAAUS,GAAG,SAASsB,KAAK,IAAIC,IAAKrB,KAEtCb,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,SACtBG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,iBCgBOgC,UA7CC,WAAM,IAAAC,EACwBC,oBAAS,GADjCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACbK,EADaH,EAAA,GACGI,EADHJ,EAAA,GAEdK,EAASC,cAFK7B,EAIiCC,YAAQ6B,KAArD3B,EAJYH,EAIZG,YAAaC,EAJDJ,EAICI,OAAc2B,EAJf/B,EAISgC,KAErBjB,EAAWa,EAAXb,OAERR,oBAAU,WACRJ,EAAYY,IACX,CAACA,EAAQZ,IAEZ,IASI3B,EALEyD,EAAqBC,sBAAY,WACrC/B,EAAYY,GACZY,GAAkB,IACjB,CAACxB,EAAaY,IAQjB,MAJe,cAAXX,GAA0B2B,GAAiBA,EAAcI,OAAS,IACpE3D,EAAUS,EAAAC,EAAAC,cAACiD,EAAD,CAAa5D,QAASuD,KAIhC9C,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAQb,SAC1BS,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,2BACEuC,GACAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMiD,QApBF,WAC5BV,GAAkB,KAmBZ,iBAKHD,GACCzC,EAAAC,EAAAC,cAACmD,EAAD,CAAevB,OAAQA,EAAQT,cAAe2B,IAE/CzD","file":"static/js/7.24af5a10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Reviews_reviews__1SpHP\",\"reviews_list\":\"Reviews_reviews_list__2MtBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ReviewItem_item__362Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"ReviewsList_reviews__3qVCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewReviewForm_form__3uudu\",\"loading\":\"NewReviewForm_loading__1jcUe\",\"control\":\"NewReviewForm_control__h6mH4\",\"actions\":\"NewReviewForm_actions__BUYoP\"};","import React from \"react\";\nimport classes from \"./ReviewItem.module.css\";\n\nconst ReviewItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default ReviewItem;\n","import React from \"react\";\nimport ReviewItem from \"./ReviewItem\";\nimport classes from \"./ReviewsList.module.css\";\n\nconst ReviewsList = (props) => {\n  return (\n    <ul className={classes.reviews}>\n      {props.reviews.map((review) => (\n        <ReviewItem key={review.id} text={review.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ReviewsList;\n","import React, { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addReview } from \"../../lib/api\";\n\n\nimport classes from \"./NewReviewForm.module.css\";\n\nconst NewReviewForm = (props) => {\n  const reviewTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addReview);\n\n  const { onAddedReview } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedReview();\n    }\n  }, [status, error, onAddedReview]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = reviewTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ reviewData: { text: enteredText }, partId: props.partId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      \n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"review\">Your Review</label>\n        <textarea id=\"review\" rows=\"5\" ref={reviewTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Review</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewReviewForm;\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getAllReviews } from \"../../lib/api\";\r\n\r\nimport classes from \"./Reviews.module.css\";\r\nimport ReviewsList from \"./ReviewsList\";\r\nimport NewReviewForm from \"./NewReviewForm\";\r\n\r\nconst Reviews = () => {\r\n  const [isAddingReview, setIsAddingReview] = useState(false);\r\n  const params = useParams();\r\n\r\n  const { sendRequest, status, data: loadedReviews } = useHttp(getAllReviews);\r\n\r\n  const { partId } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(partId);\r\n  }, [partId, sendRequest]);\r\n\r\n  const startAddReviewHandler = () => {\r\n    setIsAddingReview(true);\r\n  };\r\n\r\n  const addedReviewHandler = useCallback(() => {\r\n    sendRequest(partId);\r\n    setIsAddingReview(false);\r\n  }, [sendRequest, partId]);\r\n\r\n  let reviews;\r\n\r\n  if (status === \"completed\" && loadedReviews && loadedReviews.length > 0) {\r\n    reviews = <ReviewsList reviews={loadedReviews} />;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.reviews}>\r\n      <section >\r\n        <h2>User Reviews</h2>\r\n        {!isAddingReview && (\r\n          <button className=\"btn\" onClick={startAddReviewHandler}>\r\n            Add a Review\r\n          </button>\r\n        )}\r\n      </section>\r\n      {isAddingReview && (\r\n        <NewReviewForm partId={partId} onAddedReview={addedReviewHandler} />\r\n      )}\r\n      {reviews}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}